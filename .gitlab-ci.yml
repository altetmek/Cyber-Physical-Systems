# Copyright (C) 2021 - Group 7
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Which Docker image shall be used on the GitLab runner?

image: registry.git.chalmers.se/courses/dit638/students/docker/ubuntu:18.04

# Details about how to connect to the Docker service to run this build.
variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""

services:
  - name: registry.git.chalmers.se/courses/dit638/students/docker/docker:19.03.3-dind
    alias: docker
    command: ["--experimental"]

stages:
  - build
  - deploy

# Display information before we start the build.
before_script:
  # Install Docker
  - ln -sf /usr/share/zoneinfo/Europe/Stockholm /etc/localtime
  - apt-get update -y && apt-get upgrade -y && apt-get dist-upgrade -y
  - apt install apt-transport-https ca-certificates curl software-properties-common gnupg2 pass libopencv-dev wget -y
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
  - add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
  - apt update  -y
  - apt-cache policy docker-ce
  - apt install docker-ce docker-compose cmake build-essential gcovr qemu-user-static -y
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
  - mkdir -p ~/.docker/cli-plugins
  - cd ~/.docker/cli-plugins/
  - wget https://github.com/docker/buildx/releases/download/v0.5.1/buildx-v0.5.1.linux-amd64
  - mv buildx-v0.5.1.linux-amd64 docker-buildx
  - chmod 755 docker-buildx
  - cd -

# This section describes what shall be done to build and test the project.
build-and-test:
  except:
    - tags
  tags:
    - docker-build
  stage: build
  script:
    - docker build -f Dockerfile .
    - mkdir build
    - cd build
    - cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/tmp ..
    - make && make test && make install
    - cd ../
    - gcovr --xml-pretty --exclude-unreachable-branches --print-summary src/ -o coverage.xml
    - mkdir report
    - gcovr --html --html-details -o report/code-coverage-report.html
    - ls -al
    - ls -al src/
  coverage: /^\s*lines:\s*\d+.\d+\%/
  artifacts:
    name: "CoverageReport-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}"
    expire_in: 2 days
    reports:
      cobertura: src/coverage.xml
    paths:
      - report

# This section describes what shall be done to deploy artefacts from the project.
release:
  # Taken from: https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string
  # Regex for allowing tag names that only start with v and then followed by the format "vX.Y.Z".
  only:
    - /^(v)(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$/
  except:
    - branches
  tags:
    - docker-build
  stage: deploy
  script:
    - DOCKER_CLI_EXPERIMENTAL=enabled docker buildx create --name platformbuilder --use
    - DOCKER_CLI_EXPERIMENTAL=enabled docker buildx inspect --bootstrap
    - DOCKER_CLI_EXPERIMENTAL=enabled docker buildx build --platform "linux/amd64,linux/arm/v7" -t "$CI_REGISTRY_IMAGE":"$CI_COMMIT_TAG" --push .
